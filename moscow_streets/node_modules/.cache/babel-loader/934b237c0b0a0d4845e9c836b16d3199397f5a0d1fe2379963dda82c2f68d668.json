{"ast":null,"code":"var _jsxFileName = \"/Users/kirilldikalin/work/moscow_streets/src/components/YandexMap.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YandexMap = ({\n  streets,\n  learnedStreets,\n  onStreetClick\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const objectsRef = useRef([]);\n  useEffect(() => {\n    // Загрузка API Яндекс Карт\n    const script = document.createElement('script');\n    script.src = 'https://api-maps.yandex.ru/2.1/?apikey=302af765-6c16-4994-992f-ec50c7f8746c&lang=ru_RU';\n    script.async = true;\n    script.onload = initMap;\n    document.body.appendChild(script);\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, []);\n  useEffect(() => {\n    if (mapInstanceRef.current) {\n      updateStreets();\n    }\n  }, [streets, learnedStreets]);\n  const initMap = () => {\n    window.ymaps.ready(() => {\n      if (mapRef.current) {\n        mapInstanceRef.current = new window.ymaps.Map(mapRef.current, {\n          center: [55.76, 37.64],\n          // Центр Москвы\n          zoom: 12,\n          controls: ['zoomControl', 'fullscreenControl']\n        });\n        updateStreets();\n      }\n    });\n  };\n  const updateStreets = () => {\n    // Очистка предыдущих объектов\n    objectsRef.current.forEach(obj => {\n      mapInstanceRef.current.geoObjects.remove(obj);\n    });\n    objectsRef.current = [];\n    streets.forEach(street => {\n      const isLearned = learnedStreets.includes(street.name);\n      const coords = street.coordinates;\n      // Проверка на валидность координат\n      if (!Array.isArray(coords) || coords.length === 0 || isNaN(coords[0][0]) || isNaN(coords[0][1])) {\n        console.log('Некорректные координаты:', coords, street.name);\n        return;\n      }\n      // Если координаты совпадают или их меньше двух — рисуем маркер\n      if (coords.length < 2 || coords[0][0] === coords[1][0] && coords[0][1] === coords[1][1]) {\n        const marker = new window.ymaps.Placemark(coords[0], {\n          balloonContent: street.name\n        }, {\n          preset: isLearned ? 'islands#greenDotIcon' : 'islands#redDotIcon'\n        });\n        mapInstanceRef.current.geoObjects.add(marker);\n        objectsRef.current.push(marker);\n        if (isLearned) {\n          mapInstanceRef.current.setCenter(coords[0], 15, {\n            duration: 300\n          });\n        }\n        console.log('Маркер:', street.name, coords[0]);\n        return;\n      }\n      // Если есть линия — рисуем линию\n      const polyline = new window.ymaps.Polyline(coords, {\n        balloonContent: street.name\n      }, {\n        strokeColor: isLearned ? '#4CAF50' : '#FF0000',\n        strokeWidth: 8,\n        opacity: 1,\n        zIndex: 1000\n      });\n      mapInstanceRef.current.geoObjects.add(polyline);\n      objectsRef.current.push(polyline);\n      if (isLearned) {\n        mapInstanceRef.current.setCenter(coords[0], 15, {\n          duration: 300\n        });\n      }\n      console.log('Линия:', street.name, coords);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    style: {\n      width: '100%',\n      height: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 10\n  }, this);\n};\n_s(YandexMap, \"cnD9RbH0V2WSnsBBBwidegZAOMU=\");\n_c = YandexMap;\nexport default YandexMap;\nvar _c;\n$RefreshReg$(_c, \"YandexMap\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","YandexMap","streets","learnedStreets","onStreetClick","_s","mapRef","mapInstanceRef","objectsRef","script","document","createElement","src","async","onload","initMap","body","appendChild","removeChild","current","updateStreets","window","ymaps","ready","Map","center","zoom","controls","forEach","obj","geoObjects","remove","street","isLearned","includes","name","coords","coordinates","Array","isArray","length","isNaN","console","log","marker","Placemark","balloonContent","preset","add","push","setCenter","duration","polyline","Polyline","strokeColor","strokeWidth","opacity","zIndex","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kirilldikalin/work/moscow_streets/src/components/YandexMap.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Street } from '../data/districts';\n\ndeclare global {\n  interface Window {\n    ymaps: any;\n  }\n}\n\ninterface YandexMapProps {\n  streets: Street[];\n  learnedStreets: string[];\n  onStreetClick?: (street: Street) => void;\n}\n\nconst YandexMap: React.FC<YandexMapProps> = ({ streets, learnedStreets, onStreetClick }) => {\n  const mapRef = useRef<HTMLDivElement>(null);\n  const mapInstanceRef = useRef<any>(null);\n  const objectsRef = useRef<any[]>([]);\n\n  useEffect(() => {\n    // Загрузка API Яндекс Карт\n    const script = document.createElement('script');\n    script.src = 'https://api-maps.yandex.ru/2.1/?apikey=302af765-6c16-4994-992f-ec50c7f8746c&lang=ru_RU';\n    script.async = true;\n    script.onload = initMap;\n    document.body.appendChild(script);\n\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (mapInstanceRef.current) {\n      updateStreets();\n    }\n  }, [streets, learnedStreets]);\n\n  const initMap = () => {\n    window.ymaps.ready(() => {\n      if (mapRef.current) {\n        mapInstanceRef.current = new window.ymaps.Map(mapRef.current, {\n          center: [55.76, 37.64], // Центр Москвы\n          zoom: 12,\n          controls: ['zoomControl', 'fullscreenControl']\n        });\n        updateStreets();\n      }\n    });\n  };\n\n  const updateStreets = () => {\n    // Очистка предыдущих объектов\n    objectsRef.current.forEach(obj => {\n      mapInstanceRef.current.geoObjects.remove(obj);\n    });\n    objectsRef.current = [];\n\n    streets.forEach(street => {\n      const isLearned = learnedStreets.includes(street.name);\n      const coords = street.coordinates;\n      // Проверка на валидность координат\n      if (\n        !Array.isArray(coords) ||\n        coords.length === 0 ||\n        isNaN(coords[0][0]) || isNaN(coords[0][1])\n      ) {\n        console.log('Некорректные координаты:', coords, street.name);\n        return;\n      }\n      // Если координаты совпадают или их меньше двух — рисуем маркер\n      if (\n        coords.length < 2 ||\n        (coords[0][0] === coords[1][0] && coords[0][1] === coords[1][1])\n      ) {\n        const marker = new window.ymaps.Placemark(coords[0], {\n          balloonContent: street.name\n        }, {\n          preset: isLearned ? 'islands#greenDotIcon' : 'islands#redDotIcon'\n        });\n        mapInstanceRef.current.geoObjects.add(marker);\n        objectsRef.current.push(marker);\n        if (isLearned) {\n          mapInstanceRef.current.setCenter(coords[0], 15, { duration: 300 });\n        }\n        console.log('Маркер:', street.name, coords[0]);\n        return;\n      }\n      // Если есть линия — рисуем линию\n      const polyline = new window.ymaps.Polyline(\n        coords,\n        { balloonContent: street.name },\n        {\n          strokeColor: isLearned ? '#4CAF50' : '#FF0000',\n          strokeWidth: 8,\n          opacity: 1,\n          zIndex: 1000\n        }\n      );\n      mapInstanceRef.current.geoObjects.add(polyline);\n      objectsRef.current.push(polyline);\n      if (isLearned) {\n        mapInstanceRef.current.setCenter(coords[0], 15, { duration: 300 });\n      }\n      console.log('Линия:', street.name, coords);\n    });\n  };\n\n  return <div ref={mapRef} style={{ width: '100%', height: '100%' }} />;\n};\n\nexport default YandexMap; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}