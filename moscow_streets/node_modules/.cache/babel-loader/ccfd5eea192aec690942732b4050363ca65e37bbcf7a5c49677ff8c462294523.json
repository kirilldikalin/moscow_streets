{"ast":null,"code":"var _jsxFileName = \"/Users/kirilldikalin/work/moscow_streets/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { DISTRICTS } from './data/districts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  padding: 20px;\n`;\n_c = AppContainer;\nconst Header = styled.header`\n  margin-bottom: 20px;\n`;\n_c2 = Header;\nconst MainContent = styled.main`\n  display: flex;\n  flex: 1;\n  gap: 20px;\n`;\n_c3 = MainContent;\nconst Sidebar = styled.div`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n_c4 = Sidebar;\nconst MapContainer = styled.div`\n  flex: 1;\n  min-height: 500px;\n  border: 1px solid #ccc;\n`;\n_c5 = MapContainer;\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  font-size: 16px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n`;\n_c6 = Input;\nconst ProgressSection = styled.div`\n  margin-top: 20px;\n`;\n_c7 = ProgressSection;\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 20px;\n  background-color: #f0f0f0;\n  border-radius: 10px;\n  overflow: hidden;\n  margin-bottom: 10px;\n\n  &::after {\n    content: '';\n    display: block;\n    width: ${props => props.progress}%;\n    height: 100%;\n    background-color: #4CAF50;\n    transition: width 0.3s ease;\n  }\n`;\n_c8 = ProgressBar;\nconst Button = styled.button`\n  padding: 10px 20px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-top: 10px;\n\n  &:hover {\n    background-color: #45a049;\n  }\n`;\n_c9 = Button;\nfunction App() {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [learnedStreets, setLearnedStreets] = useState([]);\n  const [progress, setProgress] = useState({});\n  useEffect(() => {\n    // Загрузка прогресса из localStorage\n    const savedProgress = localStorage.getItem('learnedStreets');\n    if (savedProgress) {\n      setLearnedStreets(JSON.parse(savedProgress));\n    }\n  }, []);\n  useEffect(() => {\n    // Сохранение прогресса в localStorage\n    localStorage.setItem('learnedStreets', JSON.stringify(learnedStreets));\n\n    // Расчет прогресса по районам\n    const newProgress = {};\n    DISTRICTS.forEach(district => {\n      const totalStreets = district.streets.length;\n      const learnedInDistrict = district.streets.filter(street => learnedStreets.includes(street.name)).length;\n      newProgress[district.name] = totalStreets > 0 ? learnedInDistrict / totalStreets * 100 : 0;\n    });\n    setProgress(newProgress);\n  }, [learnedStreets]);\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  const handleInputSubmit = e => {\n    e.preventDefault();\n    const normalizedInput = inputValue.trim().toLowerCase();\n\n    // Поиск улицы\n    const foundStreet = DISTRICTS.flatMap(d => d.streets).find(street => street.name.toLowerCase() === normalizedInput);\n    if (foundStreet) {\n      if (!learnedStreets.includes(foundStreet.name)) {\n        setLearnedStreets([...learnedStreets, foundStreet.name]);\n        toast.success(`Поздравляем! Вы выучили улицу ${foundStreet.name}`);\n      } else {\n        toast.info('Эта улица уже изучена');\n      }\n    } else {\n      toast.error('Улица не найдена в ЦАО');\n    }\n    setInputValue('');\n  };\n  const handleClearProgress = () => {\n    if (window.confirm('Вы уверены, что хотите сбросить весь прогресс?')) {\n      setLearnedStreets([]);\n      toast.info('Прогресс сброшен');\n    }\n  };\n  const handleExportProgress = () => {\n    const data = JSON.stringify(learnedStreets);\n    const blob = new Blob([data], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'moscow-streets-progress.json';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const handleImportProgress = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = event => {\n        try {\n          var _event$target;\n          const importedStreets = JSON.parse((_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.result);\n          if (Array.isArray(importedStreets)) {\n            setLearnedStreets(importedStreets);\n            toast.success('Прогресс успешно импортирован');\n          } else {\n            throw new Error('Неверный формат файла');\n          }\n        } catch (error) {\n          toast.error('Ошибка при импорте файла');\n        }\n      };\n      reader.readAsText(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0437\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435 \\u0443\\u043B\\u0438\\u0446 \\u0426\\u0410\\u041E \\u041C\\u043E\\u0441\\u043A\\u0432\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleInputSubmit,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: inputValue,\n            onChange: handleInputChange,\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0443\\u043B\\u0438\\u0446\\u044B...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgressSection, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u041F\\u0440\\u043E\\u0433\\u0440\\u0435\\u0441\\u0441 \\u043F\\u043E \\u0440\\u0430\\u0439\\u043E\\u043D\\u0430\\u043C:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), DISTRICTS.map(district => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: district.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n              progress: progress[district.name] || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)]\n          }, district.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClearProgress,\n            children: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C \\u043F\\u0440\\u043E\\u0433\\u0440\\u0435\\u0441\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleExportProgress,\n            children: \"\\u042D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442 \\u043F\\u0440\\u043E\\u0433\\u0440\\u0435\\u0441\\u0441\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".json\",\n            onChange: handleImportProgress,\n            style: {\n              display: 'none'\n            },\n            id: \"import-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              var _document$getElementB;\n              return (_document$getElementB = document.getElementById('import-input')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.click();\n            },\n            children: \"\\u0418\\u043C\\u043F\\u043E\\u0440\\u0442 \\u043F\\u0440\\u043E\\u0433\\u0440\\u0435\\u0441\\u0441\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        id: \"map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/uItECwVwPhmjI2Zlo0OllyZg9c=\");\n_c0 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"MainContent\");\n$RefreshReg$(_c4, \"Sidebar\");\n$RefreshReg$(_c5, \"MapContainer\");\n$RefreshReg$(_c6, \"Input\");\n$RefreshReg$(_c7, \"ProgressSection\");\n$RefreshReg$(_c8, \"ProgressBar\");\n$RefreshReg$(_c9, \"Button\");\n$RefreshReg$(_c0, \"App\");","map":{"version":3,"names":["React","useState","useEffect","styled","ToastContainer","toast","DISTRICTS","jsxDEV","_jsxDEV","AppContainer","div","_c","Header","header","_c2","MainContent","main","_c3","Sidebar","_c4","MapContainer","_c5","Input","input","_c6","ProgressSection","_c7","ProgressBar","props","progress","_c8","Button","button","_c9","App","_s","inputValue","setInputValue","learnedStreets","setLearnedStreets","setProgress","savedProgress","localStorage","getItem","JSON","parse","setItem","stringify","newProgress","forEach","district","totalStreets","streets","length","learnedInDistrict","filter","street","includes","name","handleInputChange","e","target","value","handleInputSubmit","preventDefault","normalizedInput","trim","toLowerCase","foundStreet","flatMap","d","find","success","info","error","handleClearProgress","window","confirm","handleExportProgress","data","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","handleImportProgress","_e$target$files","file","files","reader","FileReader","onload","event","_event$target","importedStreets","result","Array","isArray","Error","readAsText","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","map","onClick","accept","style","display","id","_document$getElementB","getElementById","_c0","$RefreshReg$"],"sources":["/Users/kirilldikalin/work/moscow_streets/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { DISTRICTS, Street } from './data/districts';\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  padding: 20px;\n`;\n\nconst Header = styled.header`\n  margin-bottom: 20px;\n`;\n\nconst MainContent = styled.main`\n  display: flex;\n  flex: 1;\n  gap: 20px;\n`;\n\nconst Sidebar = styled.div`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nconst MapContainer = styled.div`\n  flex: 1;\n  min-height: 500px;\n  border: 1px solid #ccc;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  font-size: 16px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n`;\n\nconst ProgressSection = styled.div`\n  margin-top: 20px;\n`;\n\nconst ProgressBar = styled.div<{ progress: number }>`\n  width: 100%;\n  height: 20px;\n  background-color: #f0f0f0;\n  border-radius: 10px;\n  overflow: hidden;\n  margin-bottom: 10px;\n\n  &::after {\n    content: '';\n    display: block;\n    width: ${props => props.progress}%;\n    height: 100%;\n    background-color: #4CAF50;\n    transition: width 0.3s ease;\n  }\n`;\n\nconst Button = styled.button`\n  padding: 10px 20px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-top: 10px;\n\n  &:hover {\n    background-color: #45a049;\n  }\n`;\n\nfunction App() {\n  const [inputValue, setInputValue] = useState('');\n  const [learnedStreets, setLearnedStreets] = useState<string[]>([]);\n  const [progress, setProgress] = useState<Record<string, number>>({});\n\n  useEffect(() => {\n    // Загрузка прогресса из localStorage\n    const savedProgress = localStorage.getItem('learnedStreets');\n    if (savedProgress) {\n      setLearnedStreets(JSON.parse(savedProgress));\n    }\n  }, []);\n\n  useEffect(() => {\n    // Сохранение прогресса в localStorage\n    localStorage.setItem('learnedStreets', JSON.stringify(learnedStreets));\n    \n    // Расчет прогресса по районам\n    const newProgress: Record<string, number> = {};\n    DISTRICTS.forEach(district => {\n      const totalStreets = district.streets.length;\n      const learnedInDistrict = district.streets.filter(street => \n        learnedStreets.includes(street.name)\n      ).length;\n      newProgress[district.name] = totalStreets > 0 \n        ? (learnedInDistrict / totalStreets) * 100 \n        : 0;\n    });\n    setProgress(newProgress);\n  }, [learnedStreets]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleInputSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const normalizedInput = inputValue.trim().toLowerCase();\n    \n    // Поиск улицы\n    const foundStreet = DISTRICTS.flatMap(d => d.streets)\n      .find(street => street.name.toLowerCase() === normalizedInput);\n\n    if (foundStreet) {\n      if (!learnedStreets.includes(foundStreet.name)) {\n        setLearnedStreets([...learnedStreets, foundStreet.name]);\n        toast.success(`Поздравляем! Вы выучили улицу ${foundStreet.name}`);\n      } else {\n        toast.info('Эта улица уже изучена');\n      }\n    } else {\n      toast.error('Улица не найдена в ЦАО');\n    }\n    \n    setInputValue('');\n  };\n\n  const handleClearProgress = () => {\n    if (window.confirm('Вы уверены, что хотите сбросить весь прогресс?')) {\n      setLearnedStreets([]);\n      toast.info('Прогресс сброшен');\n    }\n  };\n\n  const handleExportProgress = () => {\n    const data = JSON.stringify(learnedStreets);\n    const blob = new Blob([data], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'moscow-streets-progress.json';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const handleImportProgress = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        try {\n          const importedStreets = JSON.parse(event.target?.result as string);\n          if (Array.isArray(importedStreets)) {\n            setLearnedStreets(importedStreets);\n            toast.success('Прогресс успешно импортирован');\n          } else {\n            throw new Error('Неверный формат файла');\n          }\n        } catch (error) {\n          toast.error('Ошибка при импорте файла');\n        }\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  return (\n    <AppContainer>\n      <ToastContainer />\n      <Header>\n        <h1>Изучение улиц ЦАО Москвы</h1>\n      </Header>\n      \n      <MainContent>\n        <Sidebar>\n          <form onSubmit={handleInputSubmit}>\n            <Input\n              type=\"text\"\n              value={inputValue}\n              onChange={handleInputChange}\n              placeholder=\"Введите название улицы...\"\n            />\n          </form>\n\n          <ProgressSection>\n            <h3>Прогресс по районам:</h3>\n            {DISTRICTS.map(district => (\n              <div key={district.name}>\n                <p>{district.name}</p>\n                <ProgressBar progress={progress[district.name] || 0} />\n              </div>\n            ))}\n          </ProgressSection>\n\n          <div>\n            <Button onClick={handleClearProgress}>Очистить прогресс</Button>\n            <Button onClick={handleExportProgress}>Экспорт прогресса</Button>\n            <input\n              type=\"file\"\n              accept=\".json\"\n              onChange={handleImportProgress}\n              style={{ display: 'none' }}\n              id=\"import-input\"\n            />\n            <Button onClick={() => document.getElementById('import-input')?.click()}>\n              Импорт прогресса\n            </Button>\n          </div>\n        </Sidebar>\n\n        <MapContainer id=\"map\">\n          {/* Здесь будет карта */}\n        </MapContainer>\n      </MainContent>\n    </AppContainer>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}